// Knex.js ‡¶è‡¶¨‡¶Ç ‡¶è‡¶∞ ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶®
const knex = require('knex')({
    client: 'sqlite3', // ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ï‡ßã‡¶® ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶õ‡¶ø
    connection: {
        filename: './database.sqlite' // ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶´‡¶æ‡¶á‡¶≤‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶è‡¶¨‡¶Ç ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶®
    },
    useNullAsDefault: true // SQLite-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ü‡¶ø ‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø
});

// ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
async function setupDatabase() {
    try {
        // 'users' ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶§‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ
        const hasUsersTable = await knex.schema.hasTable('users');
        if (!hasUsersTable) {
            await knex.schema.createTable('users', (table) => {
                table.increments('id').primary(); // ‡¶Ö‡¶ü‡ßã-‡¶á‡¶®‡¶ï‡ßç‡¶∞‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡¶ø‡¶Ç ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶Æ‡¶æ‡¶∞‡¶ø ‡¶ï‡ßÄ
                table.string('username').unique().notNullable(); // ‡¶á‡¶â‡¶®‡¶ø‡¶ï ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶®‡ßá‡¶Æ
                table.string('password').notNullable(); // ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° (‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶™‡¶∞‡ßá ‡¶π‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶¨)
                table.decimal('balance', 14, 2).defaultTo(0.00); // ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏
            });
            console.log("‚úÖ 'users' ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§");
            
            // ‡¶è‡¶ï‡¶ü‡¶ø ‡¶°‡ßá‡¶Æ‡ßã ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ
            await knex('users').insert({
                username: 'demo_user',
                password: 'demo_password', // ‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶ï‡¶∞‡¶¨
                balance: 500.00
            });
            console.log("üë§ ‡¶°‡ßá‡¶Æ‡ßã ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§");
        }

        // 'orders' ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶§‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ
        const hasOrdersTable = await knex.schema.hasTable('orders');
        if (!hasOrdersTable) {
            await knex.schema.createTable('orders', (table) => {
                table.increments('id').primary();
                table.integer('user_id').unsigned().references('id').inTable('users'); // users ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï
                table.string('mailType').notNullable();
                table.integer('quantity').notNullable();
                table.decimal('totalCost', 14, 2).notNullable();
                table.json('purchasedEmails'); // ‡¶ï‡ßá‡¶®‡¶æ ‡¶á‡¶Æ‡ßá‡¶≤‡¶ó‡ßÅ‡¶≤‡ßã JSON ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡¶¨‡ßá
                table.timestamps(true, true); // createdAt ‡¶è‡¶¨‡¶Ç updatedAt ‡¶∏‡¶Æ‡ßü ‡¶∏‡ßç‡¶¨‡ßü‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ø‡ßã‡¶ó ‡¶π‡¶¨‡ßá
            });
            console.log("‚úÖ 'orders' ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§");
        }

    } catch (error) {
        console.error("‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", error);
    }
}

// knex ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
module.exports = { knex, setupDatabase };
